# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Generate images job
  generate-images:
    uses: ./.github/workflows/plantuml.yml
  # Build job
  build:
    runs-on: ubuntu-latest
    needs: generate-images
    env:
      HUGO_VERSION: 0.114.0
      ARTIFACT: artifact
      VOICEVOX_PATH: content/voicevox
      YOUR_PAT: ${{ secrets.ANCIENT_BLOG_PAT}}
      YOUR_OWNER: ancient-blog
      YOUR_REPO: hugo.github.io
      YOUR_ARTIFACT_NAME: voicevox-data
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install jq -y
      - name: Get Artifacts using the GitHub API
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${YOUR_PAT}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${YOUR_OWNER}/${YOUR_REPO}/actions/artifacts > artifacts.json

          # GitHub APIからarchive_download_urlを取得し、日付でソートして最新のアーティファクトを取得
          archive_download_url=$(cat artifacts.json | jq -r '.artifacts | sort_by(.created_at) | reverse | .[0].archive_download_url')
          if [ -z "$archive_download_url" ]; then
            echo "No matching artifacts found for ${YOUR_ARTIFACT_NAME}"
            exit 1
          fi
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${YOUR_PAT}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            ${archive_download_url} > artifacts.zip
          ls -lh
        continue-on-error: true  # 初回で成果物がない場合エラーを許可します
      - name: Unzip Artifact
        run: |
          if [ -f artifacts.zip ]; then
            unzip artifacts.zip -d ${VOICEVOX_PATH}
          else
            echo "artifacts.zip not found, skipping unzip."
          fi
      - name: To set up Google Analytics tracking code in a Hugo website's config.toml file.
        run: |
          sed -i s/G-XXXXXXXXXX/${{ vars.GOOGLE_ANALYTICS_TRACKING_CODE }}/ config.toml
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}/content/images/plantuml/
          name: plant-uml-image 
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
